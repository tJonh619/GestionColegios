@model GestionColegios.ViewModels.VMCalificaciones

<div class="container mt-4">
    <div class="card shadow-sm fs-5">
        <!-- Cabecera de la card -->
        <div class="card-header bg-primary text-white">
            <h3 class="card-title m-0">Mis Estudiantes</h3>
        </div>

        <!-- Cuerpo de la card -->
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <!-- Selección del tipo de búsqueda -->
                <div class="form-group w-25">
                    <label for="searchType" class="form-label">Buscar por:</label>
                    <select id="searchType" class="form-select fs-5">
                        <option value="nombres">Nombre Estudiante</option>
                        <option value="apellidos">Apellido Estudiante</option>
                        <option value="codigo">Codigo Estudiante</option>
                        <option value="direccion">Direccion</option>
                    </select>
                </div>

                <!-- Campo de búsqueda -->
                <div class="form-group w-50">
                    <label for="search" class="form-label fs-5">Buscar</label>
                    <input type="text" id="search" class="form-control fs-5" placeholder="Ingrese su busqueda..." />
                </div>

                <!-- Spinner de carga -->
                <div id="spinner" class="spinner-border text-primary" role="status" style="display: none;">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>

            <!-- Tabla de estudiantes -->
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th class="fs-5">Nombres</th>
                            <th class="fs-5">Apellidos</th>
                            <th class="fs-5">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        @foreach (var estudiante in Model.Estudiantes.Where(e => e.CursoAcademicoEstudiante.Any(c => c.CursoAcademico.Id == ViewBag.idCurso && c.EstudianteId == e.Id)))
                        {
                            <tr>
                                <td class="fs-5">@estudiante.Nombres</td>
                                <td class="fs-5">@estudiante.Apellidos</td>
                                <td class="fs-5 text-center">
                                    <a href="@Url.Action("SeleccionarParciales", "CalificacionWeb", new { estudianteId = estudiante.Id })" class="btn btn-sm btn-success me-2">
                                        <i class="bi bi-book"></i> <span class="fs-5">Registrar Notas</span>
                                    </a>
                                    <a href="@Url.Action("PruebasEficiencia", new { estudianteId = estudiante.Id })" class="btn btn-sm btn-info">
                                        <i class="bi bi-heart-pulse"></i> <span class="fs-5">Pruebas de Eficiencia Física</span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" class="btn btn-success" id="openModalButton">
                    <i class="fa fa-plus"></i> <span class="fs-5">Agregar Estudiantes</span>
                </button>
            </div>

            <!-- Modal para seleccionar estudiantes -->
            <div class="modal fade" id="modalEstudiantes" tabindex="-1" role="dialog" aria-labelledby="modalEstudiantesLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <!-- Cabecera del modal -->
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalEstudiantesLabel">Seleccionar Estudiantes</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>

                        <!-- Cuerpo del modal -->
                        <div class="modal-body">
                            <!-- Formulario de filtros -->
                            @using (Html.BeginForm("SeleccionarEstudiantes", "CalificacionWeb", FormMethod.Post, new { @class = "form-inline", id = "formFiltrarEstudiantes" }))
                            {
                                @*<div class="form-group">
                                    <label for="anioAcademico">Año Académico</label>
                                    @Html.DropDownList("anioAcademico",
                                        new SelectList(Model.AñoAcademicos, "Id", "Nombre"),
                                        "Seleccione el Año Académico",
                                        new { @class = "form-control fs-5" })

                                </div>*@

                                <div class="form-group">
                                    <label for="fechaMatricula">Fecha de Matrícula</label>
                                    <input type="date" id="fechaMatricula" name="fechaMatricula" class="form-control fs-5" />
                                </div>

                                <button type="submit" class="btn btn-primary"><span class="fs-5">Filtrar Estudiantes</span></button>
                            }

                            <!-- Contenedor para la tabla de estudiantes filtrados -->
                            <div id="tablaEstudiantesContainer">
                                @Html.Partial("_TablaEstudianteModal", Model)
                            </div>

                            <!-- Formulario para guardar los estudiantes seleccionados -->
                            @using (Html.BeginForm("AgregarEstudiantes", "CalificacionWeb", FormMethod.Post, new { id = "formGuardarSeleccion" }))
                            {
                                @Html.Hidden("id", Model.CursoAcademico.Id)
                                <div class="form-group">
                                    <button type="submit" class="btn btn-success">
                                        <span class="fs-5">Guardar Selección</span>
                                    </button>
                                </div>
                            }
                        </div>

                        <!-- Pie del modal -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal"><span class="fs-5">Cerrar</span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    // Funcionalidad para seleccionar todos los estudiantes
    $('#selectAll').on('change', function () {
        $('input[name="estudiantesSeleccionados"]').prop('checked', this.checked);
    });

    document.getElementById('openModalButton').addEventListener('click', function () {
        var myModal = new bootstrap.Modal(document.getElementById('modalEstudiantes'));
        myModal.show();
    });

    $(document).ready(function () {
        // Lógica para el formulario de filtrado de estudiantes
        $('#formFiltrarEstudiantes').submit(function (e) {
            e.preventDefault();  // Evitar envío de formulario por defecto

            // Enviar el formulario de filtro para actualizar la lista de estudiantes
            $.ajax({
                type: 'POST',
                url: $(this).attr('action'),
                data: $(this).serialize(),
                success: function (response) {
                    $('#tablaEstudiantesContainer').html(response);  // Actualizar la lista de estudiantes filtrados
                },
                error: function () {
                    alert("Hubo un error al filtrar los estudiantes.");
                }
            });
        });

        // Lógica para el botón de guardar selección
        $('#formGuardarSeleccion').submit(function (e) {
            e.preventDefault();  // Evitar el envío de formulario por defecto

            // Limpiar los estudiantes seleccionados previos antes de agregar los nuevos
            $('#formGuardarSeleccion input[name="estudiantesSeleccionados"]').remove();

            // Capturar los estudiantes seleccionados
            var estudiantesSeleccionados = [];
            $('#tablaEstudiantes input[name="estudiantesSeleccionados"]:checked').each(function () {
                estudiantesSeleccionados.push($(this).val());
            });

            // Verificar si hay estudiantes seleccionados
            if (estudiantesSeleccionados.length === 0) {
                alert("Debe seleccionar al menos un estudiante.");
                return; // Detener el proceso si no hay selección
            }

            // Añadir los estudiantes seleccionados al formulario como campos hidden
            estudiantesSeleccionados.forEach(function (estudianteId) {
                $('#formGuardarSeleccion').append(
                    $('<input>', {
                        type: 'hidden',
                        name: 'estudiantesSeleccionados',  // Nombre del parámetro
                        value: estudianteId  // ID del estudiante
                    })
                );
            });

            // Enviar el formulario con los estudiantes seleccionados
            $('#formGuardarSeleccion')[0].submit();  // Este es el envío del formulario real
        });
    });



</script>
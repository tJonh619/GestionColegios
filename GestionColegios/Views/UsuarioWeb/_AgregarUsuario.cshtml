@model GestionColegios.ViewModels.VMUsuario

@{
    var esSoloLectura = ViewBag.EsEdicion
        ? new Dictionary<string, object> { { "readonly", "readonly" }, { "disabled", "disabled" } }
        : new Dictionary<string, object>();
}

@functions {
    IDictionary<string, object> ObtenerAtributos(Dictionary<string, object> atributosBase, Dictionary<string, object> soloLectura)
    {
        return atributosBase.Concat(soloLectura).ToDictionary(k => k.Key, v => v.Value);
    }
}


<div class="container mt-3">
    <div class="row">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow border-0">
                <!-- Cabecera de la tarjeta -->
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title mb-0">
                        <i class="fa fa-user-plus me-2"></i>
                        @(ViewBag.EsEdicion ? "Editando Usuario" : "Agregar Usuario")
                    </h3>
                </div>

                @using (Html.BeginForm(ViewBag.EsEdicion ? "Edit" : "Create", "UsuarioWeb", FormMethod.Post,
                       new { @class = "form-horizontal", @role = "form" }))
                {
                    <div class="card-body fs-3">

                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Usuario.Id)

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!-- Nombre de Usuario -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Usuario.NombreUsuario, "Nombre de Usuario", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Usuario.NombreUsuario, new
                       { @class = "form-control fs-5", @required = "required", @placeholder = "Introduce el nombre del usuario", autocomplete = "new-name", name = "" })
                            @Html.ValidationMessageFor(m => m.Usuario.NombreUsuario, "", new { @class = "text-danger" })
                        </div>

                        <!-- Contraseña -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Usuario.ClaveHash, "Contraseña", new { @class = "form-label" })
                            @Html.PasswordFor(m => m.Usuario.ClaveHash,
                             new { @class = "form-control  fs-5", @required = "required", @placeholder = "Introduce la contraseña", autocomplete = "new-password", name = "" })
                            @Html.ValidationMessageFor(m => m.Usuario.ClaveHash, "", new { @class = "text-danger" })
                        </div>

                        <!-- Correo de Recuperación -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Usuario.CorreoRecuperacion, "Correo de Recuperación", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Usuario.CorreoRecuperacion,
                             new { @class = "form-control  fs-5", @required = "required", @placeholder = "Introduce el correo para recuperación" })
                            @Html.ValidationMessageFor(m => m.Usuario.CorreoRecuperacion, "", new { @class = "text-danger" })
                        </div>

                        <!-- Rol -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Usuario.RolId, "Rol", new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.Usuario.RolId,
                             new SelectList(Model.Roles, "Id", "Descripcion", Model.Usuario.RolId),
                             "Selecciona un rol", new { @class = "form-select fs-5", @required = "required" })
                            @Html.ValidationMessageFor(m => m.Usuario.RolId, "", new { @class = "text-danger" })
                        </div>
                        
                    </div>

                    <!-- Footer de la tarjeta con botones de acción -->
                    <div class="card-footer text-center fs-4">
                        <button type="submit" id="btn-save" class="btn btn-primary me-2">
                            <i class="fa fa-save me-1"></i> @(ViewBag.EsEdicion ? "Guardar Cambios" : "Registrar")
                        </button>
                        @if (ViewBag.EsEdicion)
                        {
                            <button type="button" id="btn-delete" class="btn btn-danger me-2" onclick="deleteRecord()">
                                <i class="fa fa-trash-alt me-1"></i> Eliminar
                            </button>
                        }
                        <a href="@Url.Action("Index", "UsuarioWeb")" class="btn btn-secondary">
                            <i class="fa fa-arrow-left me-1"></i> Cancelar
                        </a>
                    </div>

                }
                </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script>
    function activateEdit() {
        $('input, select').each(function () {
            $(this).prop('readonly', false);
            $(this).prop('disabled', false);
        });
        $('#btn-save').show();
        $('#btn-cancel-edit').text("Cancelar");
        $('#btn-edit').hide();
        $('#btn-delete').hide();
    }

    function cancelOrReturn() {
        if ($('#btn-cancel-edit').text() === "Cancelar") {
            $('input, select').each(function () {
                $(this).prop('readonly', true);
                $(this).prop('disabled', true);
            });
            $('#btn-save').hide();
            $('#btn-edit').show();
            $('#btn-cancel-edit').text("Regresar");
            $('#btn-delete').show();
        } else {
            window.location.href = '@Url.Action("Index", "UsuarioWeb")';
        }
    }

    function deleteRecord() {
        const deleteUrl = '@Url.Action("Delete", "UsuarioWeb", new { id = Model.Usuario.Id })';
        if (confirm("¿Estás seguro de que deseas eliminar este Usuario?")) {
            window.location.href = deleteUrl;
        }
    }
</script>
@model GestionColegios.ViewModels.VMUsuario

@{
    var esSoloLectura = ViewBag.EsEdicion
        ? new Dictionary<string, object> { { "readonly", "readonly" }, { "disabled", "disabled" } }
        : new Dictionary<string, object>();
}

@functions {
    IDictionary<string, object> ObtenerAtributos(Dictionary<string, object> atributosBase, Dictionary<string, object> soloLectura)
    {
        return atributosBase.Concat(soloLectura).ToDictionary(k => k.Key, v => v.Value);
    }
}

<div class="container mt-3">
    <div class="row">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow border-0">
                <!-- Cabecera de la tarjeta -->
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title mb-0">
                        <i class="fa fa-user-tag me-2"></i>
                        @(ViewBag.EsEdicion ? "Editar Rol" : "Agregar Rol")
                    </h3>
                </div>
                @using (Html.BeginForm(ViewBag.EsEdicion ? "EditRole" : "CreateRole", "UsuarioWeb", FormMethod.Post,
                       new { @class = "form-horizontal", @role = "form" }))
                {
                    <!-- Cuerpo de la tarjeta -->
                    <div class="card-body fs-3">

                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Rol.Id)

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!-- Nombre del Rol -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Rol.Nombre, "Nombre del Rol", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Rol.Nombre,
                             ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control fs-5" },
                                    { "placeholder", "Introduce el nombre del rol" },
                                    { "required", "required" }
                             }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.Rol.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <!-- Descripción del Rol -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Rol.Descripcion, "Descripción", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Rol.Descripcion,
                             ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control fs-5" },
                                    { "placeholder", "Introduce una descripción del rol" },
                                    { "required", "required" }
                             }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.Rol.Descripcion, "", new { @class = "text-danger" })
                        </div>
                        
                    </div>

                    <!-- Footer de la tarjeta con botones de acción -->
                    <div class="card-footer text-center fs-4">
                        <button type="button" id="btn-edit" class="btn btn-success me-2"
                                style="@(ViewBag.EsEdicion ? "" : "display:none;")"
                                onclick="activateEdit()">
                            <i class="fa fa-edit me-1"></i> Editar
                        </button>

                        <button type="submit" id="btn-save" class="btn btn-primary me-2"
                                style="@(ViewBag.EsEdicion ? "display:none;" : "")">
                            <i class="fa fa-save me-1"></i> @(Model.Rol.Id == 0 ? "Registrar" : "Guardar Cambios")
                        </button>

                        @if (ViewBag.EsEdicion)
                        {
                            <button type="button" id="btn-delete" class="btn btn-danger me-2" onclick="deleteRecord()">
                                <i class="fa fa-trash-alt me-1"></i> Eliminar
                            </button>
                        }

                        <button type="button" id="btn-cancel-edit" class="btn btn-secondary me-2" onclick="cancelOrReturn()">
                            <i class="fa fa-arrow-left me-1"></i> Regresar
                        </button>
                    </div>
                }
                </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function activateEdit() {
        $('input, select').each(function () {
            $(this).prop('readonly', false);
            $(this).prop('disabled', false);
        });
        $('#btn-save').show();
        $('#btn-cancel-edit').text("Cancelar");
        $('#btn-edit').hide();
        $('#btn-delete').hide();
    }

    function cancelOrReturn() {
        if ($('#btn-cancel-edit').text() === "Cancelar") {
            $('input, select').each(function () {
                $(this).prop('readonly', true);
                $(this).prop('disabled', true);
            });
            $('#btn-save').hide();
            $('#btn-edit').show();
            $('#btn-cancel-edit').text("Regresar");
            $('#btn-delete').show();
        } else {
            window.location.href = '@Url.Action("Index", "UsuarioWeb")';
        }
    }

    function deleteRecord() {
        const deleteUrl = '@Url.Action("DeleteRole", "UsuarioWeb", new { id = Model.Rol.Id })';
        if (confirm("¿Estás seguro de que deseas eliminar este Rol?")) {
            window.location.href = deleteUrl;
        }
    }
</script>

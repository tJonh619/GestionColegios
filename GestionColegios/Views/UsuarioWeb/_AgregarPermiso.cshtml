@model GestionColegios.ViewModels.VMUsuario

@{
    var esSoloLectura = ViewBag.EsEdicion
        ? new Dictionary<string, object> { { "readonly", "readonly" }, { "disabled", "disabled" } }
        : new Dictionary<string, object>();
}

@functions {
    IDictionary<string, object> ObtenerAtributos(Dictionary<string, object> atributosBase, Dictionary<string, object> soloLectura)
    {
        return atributosBase.Concat(soloLectura).ToDictionary(k => k.Key, v => v.Value);
    }
}

<div class="tab-pane fade show active" id="permiso-create" role="tabpanel" aria-labelledby="permiso-create-tab">
    <div class="row mt-2">
        <div class="col-md-12">
            @using (Html.BeginForm(ViewBag.EsEdicion ? "EditPermiso" : "CreatePermiso", "UsuarioWeb", FormMethod.Post,
                new { @id = "form-permiso" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Permiso.Id) <!-- Campo oculto para el Id -->

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-6 card mb-3">
                        <div class="row card-header bg-primary text-white">
                            <label class="m-md-1">
                                <i class="fa fa-key mr-md-2" aria-hidden="true"></i>
                                @(ViewBag.EsEdicion ? "Editar Permiso" : "Información del Permiso")
                            </label>
                        </div>

                        <!-- Nombre del Permiso -->
                        <div class="form-group mb-3">
                            @Html.Label("Nombre del Permiso", new { @for = "Nombre" })
                            @Html.TextBoxFor(m => m.Permiso.Nombre,
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control" },
                                    { "placeholder", "Introduce el nombre del permiso" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(model => model.Permiso.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <!-- Descripción del Permiso -->
                        <div class="form-group mb-3">
                            @Html.Label("Descripción", new { @for = "Descripcion" })
                            @Html.TextBoxFor(m => m.Permiso.Descripcion,
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control" },
                                    { "placeholder", "Introduce la descripción del permiso" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(model => model.Permiso.Descripcion, "", new { @class = "text-danger" })
                        </div>

                        <!-- Selección de Rol -->
                        <div class="form-group mb-3">
                            @Html.Label("Rol Asociado", new { @for = "RolId" })
                            @Html.DropDownListFor(m => m.Permiso.RolId,
                                new SelectList(Model.Roles, "Id", "Nombre", Model.Permiso.RolId),
                                "Selecciona un Rol",
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(model => model.Permiso.RolId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Campo Activo -->
                        <div class="form-group mb-3">
                            @Html.Label("Activo", new { @for = "Activo" })
                            @Html.CheckBox("Activo", Model.Permiso.Activo,
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-check-input" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(model => model.Permiso.Activo, "", new { @class = "text-danger" })
                        </div>

                        <!-- Fecha -->
                        <div class="form-group mb-3">
                            @Html.Label("Fecha", new { @for = "Fecha" })
                            @Html.TextBox("Fecha", Model.Permiso.FechaModificacion.ToString("yyyy-MM-dd"),
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control" },
                                    { "type", "date" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(model => model.Permiso.FechaModificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Botones de Acción -->
                    <div class="form-group col-md-2 mt-4">
                        <button type="button" id="btn-edit" class="btn btn-sm btn-success m-1"
                                style="@(ViewBag.EsEdicion ? "" : "display:none;")"
                                onclick="activateEdit()">
                            Editar
                        </button>

                        <button type="submit" id="btn-save" class="btn btn-primary m-1"
                                style="@(ViewBag.EsEdicion ? "display:none;" : "")">
                            @(Model.Permiso.Id == 0 ? "Registrar" : "Guardar Cambios")
                        </button>

                        @if (ViewBag.EsEdicion)
                        {
                            <button type="button" id="btn-delete" class="btn btn-sm btn-danger m-1"
                                    onclick="deleteRecord()">
                                Eliminar
                            </button>
                        }

                        <button type="button" id="btn-cancel-edit" class="btn btn-sm btn-secondary m-1"
                                onclick="cancelOrReturn()">
                            Regresar
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function activateEdit() {
        $('input, select').each(function () {
            $(this).prop('readonly', false);
            $(this).prop('disabled', false);
        });
        $('#btn-save').show();
        $('#btn-cancel-edit').text("Cancelar");
        $('#btn-edit').hide();
        $('#btn-delete').hide();
    }

    function cancelOrReturn() {
        if ($('#btn-cancel-edit').text() === "Cancelar") {
            $('input, select').each(function () {
                $(this).prop('readonly', true);
                $(this).prop('disabled', true);
            });
            $('#btn-save').hide();
            $('#btn-edit').show();
            $('#btn-cancel-edit').text("Regresar");
            $('#btn-delete').show();
        } else {
            window.location.href = '@Url.Action("Index", "UsuarioWeb")';
        }
    }

    function deleteRecord() {
        const deleteUrl = '@Url.Action("DeletePermiso", "UsuarioWeb", new { id = Model.Permiso.Id })';
        if (confirm("¿Estás seguro de que deseas eliminar este Permiso?")) {
            window.location.href = deleteUrl;
        }
    }
</script>

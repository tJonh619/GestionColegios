@model GestionColegios.ViewModels.VMCursoAcademico

@{
    ViewBag.Title = (ViewBag.EsEdicion ?? false) ? "Editar Curso Académico" : "Crear Curso Académico";
    var esSoloLectura = (ViewBag.EsEdicion ?? false)
        ? new Dictionary<string, object> { { "readonly", "readonly" }, { "disabled", "disabled" } }
        : new Dictionary<string, object>();
}

@functions {
    IDictionary<string, object> ObtenerAtributos(Dictionary<string, object> atributosBase, Dictionary<string, object> soloLectura)
    {
        return atributosBase.Concat(soloLectura).ToDictionary(k => k.Key, v => v.Value);
    }
}



<div class="container mt-3 fs-5">
    <!-- Modal de borrado -->
    @Html.Partial("_ModalConfirmarBorrar")
    <div class="row">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow border-0">
                <!-- Cabecera de la tarjeta -->
                <div class="card-header bg-primary text-white fs-5">
                    <h3 class="card-title mb-0">
                        <i class="fa fa-graduation-cap me-2"></i>
                        @(ViewBag.EsEdicion ?? false ? "Editar Curso Académico" : "Agregar Curso Académico")
                    </h3>
                </div>

                @using (Html.BeginForm(ViewBag.EsEdicion ? "Edit" : "Create", "CursoAcademicoWeb", FormMethod.Post,
                    new { @class = "form-horizontal", @role = "form" }))
                {
                    <div class="card-body fs-5">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.CursoAcademico.Id)

                        @Html.ValidationSummary(true, "", new { @class = "text-danger fs-5" })

                        <!-- Nombre del Curso -->
                        <div class="mb-3">
                            @Html.Label("Nombre del Curso", new { @class = "form-label fs-5", @for = "Nombre" })
                            @Html.TextBoxFor(m => m.CursoAcademico.Nombre,
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-control fs-5" },
                                    { "placeholder", "Introduce el nombre del curso" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.CursoAcademico.Nombre, "", new { @class = "text-danger fs-5" })
                        </div>

                        <!-- Maestro -->
                        <div class="mb-3">
                            @Html.Label("Maestro", new { @class = "form-label fs-5", @for = "MaestroId" })
                            @Html.DropDownListFor(m => m.CursoAcademico.MaestroId,
                                new SelectList(Model.Maestros, "Id", "Nombres", Model.CursoAcademico.MaestroId),
                                "Seleccione un maestro",
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-select fs-5" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.CursoAcademico.MaestroId, "", new { @class = "text-danger fs-5" })
                        </div>

                        <!-- Sección -->
                        <div class="mb-3">
                            @Html.Label("Sección", new { @class = "form-label fs-5", @for = "SeccionId" })
                            @Html.DropDownListFor(m => m.CursoAcademico.SeccionId,
                                new SelectList(Model.Secciones, "Id", "Nombre", Model.CursoAcademico.SeccionId),
                                "Seleccione una sección",
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-select fs-5" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.CursoAcademico.SeccionId, "", new { @class = "text-danger fs-5" })
                        </div>

                        <!-- Año Académico -->
                        <div class="mb-3">
                            @Html.Label("Año Académico", new { @class = "form-label fs-5", @for = "AñoAcademicoId" })
                            @Html.DropDownListFor(m => m.CursoAcademico.AñoAcademicoId,
                                new SelectList(Model.AñosAcademicos, "Id", "Nombre", Model.CursoAcademico.AñoAcademicoId),
                                "Seleccione un año académico",
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-select fs-5" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.CursoAcademico.AñoAcademicoId, "", new { @class = "text-danger fs-5" })
                        </div>

                        <!-- Año -->
                        <div class="mb-3">
                            @Html.Label("Año", new { @class = "form-label fs-5", @for = "AñoId" })
                            @Html.DropDownListFor(m => m.CursoAcademico.AñoId,
                                new SelectList(Model.Años, "Id", "Nombre", Model.CursoAcademico.AñoId),
                                "Seleccione un año",
                                ObtenerAtributos(new Dictionary<string, object> {
                                    { "class", "form-select fs-5" },
                                    { "required", "required" }
                                }, esSoloLectura))
                            @Html.ValidationMessageFor(m => m.CursoAcademico.AñoId, "", new { @class = "text-danger fs-5" })
                        </div>

                    </div>

                    <!-- Footer de la tarjeta con botones de acción -->
                    <div class="card-footer text-center fs-4">
                        <button type="button" id="btn-edit" class="btn btn-success me-2"
                                style="@(ViewBag.EsEdicion ? "" : "display:none;")"
                                onclick="activateEdit()">
                            <i class="fa fa-edit me-1"></i> Editar
                        </button>

                        <button type="submit" id="btn-save" class="btn btn-primary me-2"
                                style="@(ViewBag.EsEdicion ? "display:none;" : "")">
                            <i class="fa fa-save me-1"></i> @(Model.CursoAcademico.Id == 0 ? "Registrar" : "Guardar Cambios")
                        </button>
                        @if (ViewBag.EsEdicion)
                        {
                            <button type="button" id="btn-delete" class="btn btn-danger me-2" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                <i class="fa fa-trash-alt me-1"></i> Eliminar
                            </button>
                        }


                        <button type="button" id="btn-cancel-edit" class="btn btn-secondary me-2" onclick="cancelOrReturn()">
                            <i class="fa fa-arrow-left me-1"></i> Regresar
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function activateEdit() {
            $('input, select').prop('readonly', false).prop('disabled', false);
            $('#btn-save').show();
            $('#btn-cancel-edit').text("Cancelar");
            $('#btn-edit, #btn-delete').hide();
        }

        function cancelOrReturn() {
            if ($('#btn-cancel-edit').text() === "Cancelar") {
                $('input, select').prop('readonly', true).prop('disabled', true);
                $('#btn-save').hide();
                $('#btn-edit, #btn-delete').show();
                $('#btn-cancel-edit').text("Regresar");
            } else {
                window.location.href = '@Url.Action("Index", "CursoAcademicoWeb")';
            }
        }
    </script>
}